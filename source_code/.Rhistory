select(Year, Geography, Age_Group, Gender, Indicators, Percentage)
# Pivot data so each indicator becomes a column
mental_health_wide <- mental_health_filtered %>%
tidyr::pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na()  # Remove missing values
# Merge with economic data
merged_data <- merge(mental_health_wide, economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
# Fill missing economic data with median
for (col in c("CPI", "Inflation_rate")) {
merged_data[[col]][is.na(merged_data[[col]])] <- median(merged_data[[col]], na.rm = TRUE)
}
# Define features and target variable
features <- c(mental_health_indicators, "CPI", "Inflation_rate")
X <- merged_data[, features]
y <- merged_data[[target]]
# Convert target variable into binary (above/below median)
y <- ifelse(y > median(y, na.rm = TRUE), 1, 0)
# Normalize features
X_scaled <- scale(X)
# Create 5-fold cross-validation
cv_folds <- trainControl(method = "cv", number = 5)
# Train logistic regression model with cross-validation
logistic_model <- train(as.factor(y) ~ .,
data = data.frame(X_scaled, y = as.factor(y)),
method = "glm",
family = "binomial",
trControl = cv_folds)
# Print cross-validation accuracy
cat("Cross-Validation Accuracy:", mean(logistic_model$results$Accuracy))
View(X)
View(X_scaled)
library(caret)
library(dplyr)
library(readr)
library(ggplot2)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life",
"Eating disorder, current diagnosed condition",
"Social phobia, life",
"Generalized anxiety disorder, life",
"Bipolar disorder, life")
target <- "Suicidal thoughts, life"
mental_health_filtered <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage)
mental_health_wide <- mental_health_filtered %>%
tidyr::pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na()
merged_data <- merge(mental_health_wide, economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
for (col in c("CPI", "Inflation_rate")) {
merged_data[[col]][is.na(merged_data[[col]])] <- median(merged_data[[col]], na.rm = TRUE)
}
features <- c(mental_health_indicators, "CPI", "Inflation_rate")
X <- merged_data[, features]
y <- merged_data[[target]]
y <- ifelse(y > median(y, na.rm = TRUE), 1, 0)
X_scaled <- scale(X)
cv_folds <- trainControl(method = "cv", number = 5)
logistic_model <- train(as.factor(y) ~ .,
data = data.frame(X_scaled, y = as.factor(y)),
method = "glm",
family = "binomial",
trControl = cv_folds)
cat("Cross-Validation Accuracy:", mean(logistic_model$results$Accuracy))
install.packages("randomForest")
library(caret)
library(dplyr)
library(readr)
library(ggplot2)
library(randomForest)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life",
"Eating disorder, current diagnosed condition",
"Social phobia, life",
"Generalized anxiety disorder, life",
"Bipolar disorder, life")
target <- "Suicidal thoughts, life"
mental_health_filtered <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage)
mental_health_wide <- mental_health_filtered %>%
tidyr::pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na()
mental_health_wide <- mental_health_filtered %>%
tidyr::pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na()
library(tidyverse)
mental_health_wide <- mental_health_filtered %>%
tidyr::pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na()
merged_data <- merge(mental_health_wide, economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
for (col in c("CPI", "Inflation_rate")) {
merged_data[[col]][is.na(merged_data[[col]])] <- median(merged_data[[col]], na.rm = TRUE)
}
features <- c(mental_health_indicators, "CPI", "Inflation_rate")
X <- merged_data[, features]
y <- merged_data[[target]]
y <- ifelse(y > median(y, na.rm = TRUE), 1, 0)
X_scaled <- scale(X)
cv_folds <- trainControl(method = "cv", number = 5)
rf_model <- train(as.factor(y) ~ .,
data = data.frame(X_scaled, y = as.factor(y)),
method = "rf",
trControl = cv_folds)
cat("Cross-Validation Accuracy (Random Forest):", mean(rf_model$results$Accuracy))
library(caret)
library(dplyr)
library(readr)
library(ggplot2)
library(randomForest)
library(tidyverse)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
cv_folds <- trainControl(method = "cv", number = 5)
rf_model <- train(as.factor(y) ~ ., data = data.frame(scale(X), y = as.factor(y)), method = "rf", trControl = cv_folds)
cat("Cross-Validation Accuracy (Random Forest):", mean(rf_model$results$Accuracy))
library(caret)
library(dplyr)
library(readr)
library(ggplot2)
library(randomForest)
library(tidyverse)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
cv_folds <- trainControl(method = "cv", number = 10, sampling = "up", search = "grid")
tune_grid <- expand.grid(mtry = seq(2, ncol(X), by = 1))
rf_model <- train(as.factor(y) ~ ., data = data.frame(scale(X), y = as.factor(y)),
method = "rf", trControl = cv_folds, tuneGrid = tune_grid, ntree = 500)
cat("Optimized Cross-Validation Accuracy (Random Forest):", mean(rf_model$results$Accuracy))
library(caret)
library(dplyr)
library(readr)
library(tidyr)
library(kernlab)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
cv_folds <- trainControl(method = "cv", number = 10, sampling = "up", search = "grid")
tune_grid <- expand.grid(sigma = 10^seq(-3, 1, length.out = 5), C = 10^seq(-2, 2, length.out = 5))
svm_model <- train(as.factor(y) ~ ., data = data.frame(scale(X), y = as.factor(y)),
method = "svmRadial", trControl = cv_folds, tuneGrid = tune_grid)
cat("Optimized Cross-Validation Accuracy (SVM):", mean(svm_model$results$Accuracy))
library(caret)
library(dplyr)
library(readr)
library(tidyr)
library(kernlab)
library(smotefamily)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
data <- data.frame(scale(X), y = as.factor(y))
smote_data <- SMOTE(y ~ ., data, perc.over = 200, perc.under = 150)
library(caret)
library(dplyr)
library(readr)
library(tidyr)
library(kernlab)
library(smotefamily)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
data <- data.frame(scale(X), y = as.factor(y))
# Apply SMOTE correctly
smote_result <- SMOTE(data[, -ncol(data)], data$y, K = 5, dup_size = 2)
smote_balanced_data <- data.frame(smote_result$data)
smote_balanced_data$y <- as.factor(smote_balanced_data$y)
merged_data <- merge(mental_health_wide, economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
library(caret)
library(dplyr)
library(readr)
library(ggplot2)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life",
"Eating disorder, current diagnosed condition",
"Social phobia, life",
"Generalized anxiety disorder, life",
"Bipolar disorder, life")
target <- "Suicidal thoughts, life"
mental_health_filtered <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage)
mental_health_wide <- mental_health_filtered %>%
tidyr::pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na()
merged_data <- merge(mental_health_wide, economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
for (col in c("CPI", "Inflation_rate")) {
merged_data[[col]][is.na(merged_data[[col]])] <- median(merged_data[[col]], na.rm = TRUE)
}
features <- c(mental_health_indicators, "CPI", "Inflation_rate")
X <- merged_data[, features]
y <- merged_data[[target]]
y <- ifelse(y > median(y, na.rm = TRUE), 1, 0)
X_scaled <- scale(X)
cv_folds <- trainControl(method = "cv", number = 5)
logistic_model <- train(as.factor(y) ~ .,
data = data.frame(X_scaled, y = as.factor(y)),
method = "glm",
family = "binomial",
trControl = cv_folds)
cat("Cross-Validation Accuracy:", mean(logistic_model$results$Accuracy))
library(caret)
library(dplyr)
library(readr)
library(tidyr)
library(kernlab)
library(smotefamily)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
data <- data.frame(scale(X), y = as.factor(y))
# **Fix: Use K = 2 instead of 5 to avoid errors**
smote_result <- SMOTE(data[, -ncol(data)], data$y, K = 2, dup_size = 2)
smote_balanced_data <- data.frame(smote_result$data)
smote_balanced_data$y <- as.factor(smote_balanced_data$y)
library(caret)
library(dplyr)
library(readr)
library(tidyr)
library(kernlab)
library(smotefamily)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
data <- data.frame(scale(X), y = as.factor(y))
smote_data <- SMOTE(y ~ ., data, perc.over = 200, perc.under = 150)
library(caret)
library(dplyr)
library(readr)
library(tidyr)
library(kernlab)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
cv_folds <- trainControl(method = "cv", number = 10, sampling = "up", search = "grid")
tune_grid <- expand.grid(sigma = 10^seq(-3, 1, length.out = 5), C = 10^seq(-2, 2, length.out = 5))
svm_model <- train(as.factor(y) ~ ., data = data.frame(scale(X), y = as.factor(y)),
method = "svmRadial", trControl = cv_folds, tuneGrid = tune_grid)
cat("Optimized Cross-Validation Accuracy (SVM):", mean(svm_model$results$Accuracy))
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
library(caret)
library(dplyr)
library(readr)
library(tidyr)
library(kernlab)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
cv_folds <- trainControl(method = "cv", number = 10, sampling = "up", search = "grid")
tune_grid <- expand.grid(sigma = 10^seq(-3, 1, length.out = 5), C = 10^seq(-2, 2, length.out = 5))
svm_model <- train(as.factor(y) ~ ., data = data.frame(scale(X), y = as.factor(y)),
method = "svmRadial", trControl = cv_folds, tuneGrid = tune_grid)
cat("Optimized Cross-Validation Accuracy (SVM):", mean(svm_model$results$Accuracy))
library(caret)
library(dplyr)
library(readr)
library(ggplot2)
library(randomForest)
library(tidyverse)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
cv_folds <- trainControl(method = "cv", number = 10, sampling = "up", search = "grid")
tune_grid <- expand.grid(mtry = seq(2, ncol(X), by = 1))
rf_model <- train(as.factor(y) ~ ., data = data.frame(scale(X), y = as.factor(y)),
method = "rf", trControl = cv_folds, tuneGrid = tune_grid, ntree = 500)
cat("Optimized Cross-Validation Accuracy (Random Forest):", mean(rf_model$results$Accuracy))
packages <- c("shiny", "shinydashboard", "ggplot2", "dplyr", "DT", "plotly", "corrplot", "readr", "reshape2")
new_packages <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(new_packages)) install.packages(new_packages)
lapply(packages, library, character.only = TRUE)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_data <- mental_health_data %>%
rename(
Year = Year,
Province = Geography,
Indicator = Indicators,
Value = Percentage
) %>%
mutate(Year = as.integer(Year))
economic_data <- economic_data %>%
rename(
Year = Year,
Province = Geo,
CPI = CPI,
Inflation = Inflation_rate
) %>%
mutate(Year = as.integer(Year))
merged_data <- left_join(mental_health_data, economic_data, by = c("Year", "Province"))
ui <- dashboardPage(
dashboardHeader(title = "Mental Health & Suicide Analysis"),
dashboardSidebar(
sidebarMenu(
menuItem("Suicide Trends", tabName = "suicide_trends", icon = icon("chart-line")),
menuItem("Mental Health Trends", tabName = "mh_trends", icon = icon("brain")),
menuItem("Economic Factors", tabName = "economic_factors", icon = icon("dollar-sign")),
menuItem("Predictions", tabName = "predictions", icon = icon("cogs"))
)
),
dashboardBody(
tabItems(
tabItem(tabName = "suicide_trends",
fluidRow(
box(
title = "Suicide Rate Over Time",
status = "primary",
solidHeader = TRUE,
width = 12,
plotlyOutput("suicide_trend_plot", height = "400px")
)
)
),
tabItem(tabName = "mh_trends",
fluidRow(
box(
title = "Mental Health Condition Trends",
status = "primary",
solidHeader = TRUE,
width = 12,
selectInput("mh_indicator", "Select Mental Health Indicator:", choices = unique(mental_health_data$Indicator)),
plotlyOutput("mh_trend_plot", height = "400px")
)
)
),
tabItem(tabName = "economic_factors",
fluidRow(
box(
title = "CPI & Inflation Trends",
status = "primary",
solidHeader = TRUE,
width = 12,
plotlyOutput("economic_trends_plot", height = "400px")
)
)
),
tabItem(tabName = "predictions",
fluidRow(
box(
title = "Machine Learning Model Performance",
status = "primary",
solidHeader = TRUE,
width = 12,
tableOutput("ml_results")
)
)
)
)
)
)
server <- function(input, output) {
output$suicide_trend_plot <- renderPlotly({
suicide_data <- merged_data %>%
filter(Indicator == "Commit Suicide") %>%
group_by(Year) %>%
summarise(Average_Suicide = mean(Value, na.rm = TRUE))
ggplotly(
ggplot(suicide_data, aes(x = Year, y = Average_Suicide)) +
geom_line(color = "red", size = 1.2) +
geom_point(color = "darkred", size = 3) +
labs(title = "Suicide Rate Over Time", x = "Year", y = "Suicide Rate (%)") +
theme_minimal()
)
})
output$mh_trend_plot <- renderPlotly({
mh_data <- merged_data %>%
filter(Indicator == input$mh_indicator) %>%
group_by(Year) %>%
summarise(Average_Value = mean(Value, na.rm = TRUE))
ggplotly(
ggplot(mh_data, aes(x = Year, y = Average_Value)) +
geom_line(color = "blue", size = 1.2) +
geom_point(color = "darkblue", size = 3) +
labs(title = paste(input$mh_indicator, "Trend Over Time"), x = "Year", y = "Percentage (%)") +
theme_minimal()
)
})
output$economic_trends_plot <- renderPlotly({
econ_data <- economic_data %>%
group_by(Year) %>%
summarise(Average_CPI = mean(CPI, na.rm = TRUE), Average_Inflation = mean(Inflation, na.rm = TRUE))
ggplotly(
ggplot(econ_data, aes(x = Year)) +
geom_line(aes(y = Average_CPI, color = "CPI"), size = 1.2) +
geom_line(aes(y = Average_Inflation, color = "Inflation"), size = 1.2) +
labs(title = "CPI & Inflation Trends", x = "Year", y = "Value") +
theme_minimal()
)
})
output$ml_results <- renderTable({
data.frame(
Model = c("Logistic Regression", "Random Forest", "SVM"),
Accuracy = c("80%", "77.78%", "60%")
)
})
}
shinyApp(ui = ui, server = server)
