cv_folds <- trainControl(method = "cv", number = 10)
logistic_model <- train(y ~ .,
data = rose_data,
method = "glmnet",  # Standard Logistic Regression
family = "binomial",
trControl = cv_folds)
# Load required libraries
library(caret)
library(dplyr)
library(readr)
library(tidyr)
library(ROSE)  # Using ROSE for balancing
# Load datasets
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
# Select most correlated mental health indicators
mental_health_indicators <- c("Major depressive episode, life",
"Generalized anxiety disorder, life",
"Bipolar disorder, life")
# Target variable
target <- "Suicidal thoughts, life"
# Filter dataset for relevant indicators
mental_health_filtered <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage)
# Pivot the dataset so indicators become columns
mental_health_wide <- mental_health_filtered %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na()
# Merge with economic data
merged_data <- merge(mental_health_wide, economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
# Fill missing economic data with median
for (col in c("CPI", "Inflation_rate")) {
merged_data[[col]][is.na(merged_data[[col]])] <- median(merged_data[[col]], na.rm = TRUE)
}
# Define features and target variable
features <- c(mental_health_indicators, "CPI", "Inflation_rate")
X <- merged_data[, features]
y <- merged_data[[target]]
# Convert target to binary (above/below median)
y <- ifelse(y > median(y, na.rm = TRUE), 1, 0)
# Normalize features
X_scaled <- scale(X)
# Convert to data frame
data <- data.frame(X_scaled, y = as.factor(y))
# Check class distribution
print(table(data$y))
# Use ROSE for balancing instead of SMOTE
set.seed(42)
rose_data <- ROSE(y ~ ., data = data, seed = 42)$data  # Generates balanced synthetic samples
# Perform 10-fold cross-validation with Logistic Regression
cv_folds <- trainControl(method = "cv", number = 10)
logistic_model <- train(y ~ .,
data = rose_data,
method = "glmnet",  # Standard Logistic Regression
family = "binomial",
trControl = cv_folds)
# Print improved cross-validation accuracy
cat("Improved Cross-Validation Accuracy:", mean(logistic_model$results$Accuracy))
# Load required libraries
library(caret)
library(dplyr)
library(readr)
library(tidyr)
library(DMwR)  # For SMOTE (Synthetic Minority Over-sampling Technique)
# Load required libraries
library(caret)  # For cross-validation
library(dplyr)  # For data manipulation
library(readr)  # For reading CSV files
library(ggplot2) # For visualization
# Load datasets
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
# Select mental health indicators
mental_health_indicators <- c("Major depressive episode, life",
"Eating disorder, current diagnosed condition",
"Social phobia, life",
"Generalized anxiety disorder, life",
"Bipolar disorder, life")
# Target variable
target <- "Suicidal thoughts, life"
# Filter only relevant indicators
mental_health_filtered <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage)
# Pivot data so each indicator becomes a column
mental_health_wide <- mental_health_filtered %>%
tidyr::pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na()  # Remove missing values
# Merge with economic data
merged_data <- merge(mental_health_wide, economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
# Fill missing economic data with median
for (col in c("CPI", "Inflation_rate")) {
merged_data[[col]][is.na(merged_data[[col]])] <- median(merged_data[[col]], na.rm = TRUE)
}
# Define features and target variable
features <- c(mental_health_indicators, "CPI", "Inflation_rate")
X <- merged_data[, features]
y <- merged_data[[target]]
# Convert target variable into binary (above/below median)
y <- ifelse(y > median(y, na.rm = TRUE), 1, 0)
# Normalize features
X_scaled <- scale(X)
# Create 5-fold cross-validation
cv_folds <- trainControl(method = "cv", number = 5)
# Train logistic regression model with cross-validation
logistic_model <- train(as.factor(y) ~ .,
data = data.frame(X_scaled, y = as.factor(y)),
method = "glm",
family = "binomial",
trControl = cv_folds)
# Print cross-validation accuracy
cat("Cross-Validation Accuracy:", mean(logistic_model$results$Accuracy))
# Load required libraries
library(caret)  # For cross-validation
library(dplyr)  # For data manipulation
library(readr)  # For reading CSV files
library(ggplot2) # For visualization
# Load datasets
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
# Select mental health indicators
mental_health_indicators <- c("Major depressive episode, life",
"Eating disorder, current diagnosed condition",
"Social phobia, life",
"Generalized anxiety disorder, life",
"Bipolar disorder, life")
# Target variable
target <- "Suicidal thoughts, life"
# Filter only relevant indicators
mental_health_filtered <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage)
# Pivot data so each indicator becomes a column
mental_health_wide <- mental_health_filtered %>%
tidyr::pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na()  # Remove missing values
# Merge with economic data
merged_data <- merge(mental_health_wide, economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
# Fill missing economic data with median
for (col in c("CPI", "Inflation_rate")) {
merged_data[[col]][is.na(merged_data[[col]])] <- median(merged_data[[col]], na.rm = TRUE)
}
# Define features and target variable
features <- c(mental_health_indicators, "CPI", "Inflation_rate")
X <- merged_data[, features]
y <- merged_data[[target]]
# Convert target variable into binary (above/below median)
y <- ifelse(y > median(y, na.rm = TRUE), 1, 0)
# Normalize features
X_scaled <- scale(X)
# Create 5-fold cross-validation
cv_folds <- trainControl(method = "cv", number = 5)
# Train logistic regression model with cross-validation
logistic_model <- train(as.factor(y) ~ .,
data = data.frame(X_scaled, y = as.factor(y)),
method = "glm",
family = "binomial",
trControl = cv_folds)
# Print cross-validation accuracy
cat("Cross-Validation Accuracy:", mean(logistic_model$results$Accuracy))
# Load required libraries
library(caret)  # For cross-validation
library(dplyr)  # For data manipulation
library(readr)  # For reading CSV files
library(ggplot2) # For visualization
# Load datasets
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
# Select mental health indicators
mental_health_indicators <- c("Major depressive episode, life",
"Eating disorder, current diagnosed condition",
"Social phobia, life",
"Generalized anxiety disorder, life",
"Bipolar disorder, life")
# Target variable
target <- "Suicidal thoughts, life"
# Filter only relevant indicators
mental_health_filtered <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage)
# Pivot data so each indicator becomes a column
mental_health_wide <- mental_health_filtered %>%
tidyr::pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na()  # Remove missing values
# Merge with economic data
merged_data <- merge(mental_health_wide, economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
# Fill missing economic data with median
for (col in c("CPI", "Inflation_rate")) {
merged_data[[col]][is.na(merged_data[[col]])] <- median(merged_data[[col]], na.rm = TRUE)
}
# Define features and target variable
features <- c(mental_health_indicators, "CPI", "Inflation_rate")
X <- merged_data[, features]
y <- merged_data[[target]]
# Convert target variable into binary (above/below median)
y <- ifelse(y > median(y, na.rm = TRUE), 1, 0)
# Normalize features
X_scaled <- scale(X)
# Create 5-fold cross-validation
cv_folds <- trainControl(method = "cv", number = 5)
# Train logistic regression model with cross-validation
logistic_model <- train(as.factor(y) ~ .,
data = data.frame(X_scaled, y = as.factor(y)),
method = "glm",
family = "binomial",
trControl = cv_folds)
# Print cross-validation accuracy
cat("Cross-Validation Accuracy:", mean(logistic_model$results$Accuracy))
View(X)
View(X_scaled)
library(caret)
library(dplyr)
library(readr)
library(ggplot2)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life",
"Eating disorder, current diagnosed condition",
"Social phobia, life",
"Generalized anxiety disorder, life",
"Bipolar disorder, life")
target <- "Suicidal thoughts, life"
mental_health_filtered <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage)
mental_health_wide <- mental_health_filtered %>%
tidyr::pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na()
merged_data <- merge(mental_health_wide, economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
for (col in c("CPI", "Inflation_rate")) {
merged_data[[col]][is.na(merged_data[[col]])] <- median(merged_data[[col]], na.rm = TRUE)
}
features <- c(mental_health_indicators, "CPI", "Inflation_rate")
X <- merged_data[, features]
y <- merged_data[[target]]
y <- ifelse(y > median(y, na.rm = TRUE), 1, 0)
X_scaled <- scale(X)
cv_folds <- trainControl(method = "cv", number = 5)
logistic_model <- train(as.factor(y) ~ .,
data = data.frame(X_scaled, y = as.factor(y)),
method = "glm",
family = "binomial",
trControl = cv_folds)
cat("Cross-Validation Accuracy:", mean(logistic_model$results$Accuracy))
install.packages("randomForest")
library(caret)
library(dplyr)
library(readr)
library(ggplot2)
library(randomForest)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life",
"Eating disorder, current diagnosed condition",
"Social phobia, life",
"Generalized anxiety disorder, life",
"Bipolar disorder, life")
target <- "Suicidal thoughts, life"
mental_health_filtered <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage)
mental_health_wide <- mental_health_filtered %>%
tidyr::pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na()
mental_health_wide <- mental_health_filtered %>%
tidyr::pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na()
library(tidyverse)
mental_health_wide <- mental_health_filtered %>%
tidyr::pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na()
merged_data <- merge(mental_health_wide, economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
for (col in c("CPI", "Inflation_rate")) {
merged_data[[col]][is.na(merged_data[[col]])] <- median(merged_data[[col]], na.rm = TRUE)
}
features <- c(mental_health_indicators, "CPI", "Inflation_rate")
X <- merged_data[, features]
y <- merged_data[[target]]
y <- ifelse(y > median(y, na.rm = TRUE), 1, 0)
X_scaled <- scale(X)
cv_folds <- trainControl(method = "cv", number = 5)
rf_model <- train(as.factor(y) ~ .,
data = data.frame(X_scaled, y = as.factor(y)),
method = "rf",
trControl = cv_folds)
cat("Cross-Validation Accuracy (Random Forest):", mean(rf_model$results$Accuracy))
library(caret)
library(dplyr)
library(readr)
library(ggplot2)
library(randomForest)
library(tidyverse)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
cv_folds <- trainControl(method = "cv", number = 5)
rf_model <- train(as.factor(y) ~ ., data = data.frame(scale(X), y = as.factor(y)), method = "rf", trControl = cv_folds)
cat("Cross-Validation Accuracy (Random Forest):", mean(rf_model$results$Accuracy))
library(caret)
library(dplyr)
library(readr)
library(ggplot2)
library(randomForest)
library(tidyverse)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
cv_folds <- trainControl(method = "cv", number = 10, sampling = "up", search = "grid")
tune_grid <- expand.grid(mtry = seq(2, ncol(X), by = 1))
rf_model <- train(as.factor(y) ~ ., data = data.frame(scale(X), y = as.factor(y)),
method = "rf", trControl = cv_folds, tuneGrid = tune_grid, ntree = 500)
cat("Optimized Cross-Validation Accuracy (Random Forest):", mean(rf_model$results$Accuracy))
library(caret)
library(dplyr)
library(readr)
library(tidyr)
library(kernlab)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
cv_folds <- trainControl(method = "cv", number = 10, sampling = "up", search = "grid")
tune_grid <- expand.grid(sigma = 10^seq(-3, 1, length.out = 5), C = 10^seq(-2, 2, length.out = 5))
svm_model <- train(as.factor(y) ~ ., data = data.frame(scale(X), y = as.factor(y)),
method = "svmRadial", trControl = cv_folds, tuneGrid = tune_grid)
cat("Optimized Cross-Validation Accuracy (SVM):", mean(svm_model$results$Accuracy))
library(caret)
library(dplyr)
library(readr)
library(tidyr)
library(kernlab)
library(smotefamily)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
data <- data.frame(scale(X), y = as.factor(y))
smote_data <- SMOTE(y ~ ., data, perc.over = 200, perc.under = 150)
library(caret)
library(dplyr)
library(readr)
library(tidyr)
library(kernlab)
library(smotefamily)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
data <- data.frame(scale(X), y = as.factor(y))
# Apply SMOTE correctly
smote_result <- SMOTE(data[, -ncol(data)], data$y, K = 5, dup_size = 2)
smote_balanced_data <- data.frame(smote_result$data)
smote_balanced_data$y <- as.factor(smote_balanced_data$y)
merged_data <- merge(mental_health_wide, economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
library(caret)
library(dplyr)
library(readr)
library(ggplot2)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life",
"Eating disorder, current diagnosed condition",
"Social phobia, life",
"Generalized anxiety disorder, life",
"Bipolar disorder, life")
target <- "Suicidal thoughts, life"
mental_health_filtered <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage)
mental_health_wide <- mental_health_filtered %>%
tidyr::pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na()
merged_data <- merge(mental_health_wide, economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
for (col in c("CPI", "Inflation_rate")) {
merged_data[[col]][is.na(merged_data[[col]])] <- median(merged_data[[col]], na.rm = TRUE)
}
features <- c(mental_health_indicators, "CPI", "Inflation_rate")
X <- merged_data[, features]
y <- merged_data[[target]]
y <- ifelse(y > median(y, na.rm = TRUE), 1, 0)
X_scaled <- scale(X)
cv_folds <- trainControl(method = "cv", number = 5)
logistic_model <- train(as.factor(y) ~ .,
data = data.frame(X_scaled, y = as.factor(y)),
method = "glm",
family = "binomial",
trControl = cv_folds)
cat("Cross-Validation Accuracy:", mean(logistic_model$results$Accuracy))
library(caret)
library(dplyr)
library(readr)
library(tidyr)
library(kernlab)
library(smotefamily)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
data <- data.frame(scale(X), y = as.factor(y))
# **Fix: Use K = 2 instead of 5 to avoid errors**
smote_result <- SMOTE(data[, -ncol(data)], data$y, K = 2, dup_size = 2)
smote_balanced_data <- data.frame(smote_result$data)
smote_balanced_data$y <- as.factor(smote_balanced_data$y)
library(caret)
library(dplyr)
library(readr)
library(tidyr)
library(kernlab)
library(smotefamily)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
data <- data.frame(scale(X), y = as.factor(y))
smote_data <- SMOTE(y ~ ., data, perc.over = 200, perc.under = 150)
library(caret)
library(dplyr)
library(readr)
library(tidyr)
library(kernlab)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
economic_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
mental_health_indicators <- c("Major depressive episode, life", "Eating disorder, current diagnosed condition",
"Social phobia, life", "Generalized anxiety disorder, life", "Bipolar disorder, life")
target <- "Suicidal thoughts, life"
merged_data <- mental_health_data %>%
filter(Indicators %in% c(mental_health_indicators, target)) %>%
select(Year, Geography, Age_Group, Gender, Indicators, Percentage) %>%
pivot_wider(names_from = Indicators, values_from = Percentage) %>%
drop_na() %>%
merge(economic_data, by.x = c("Year", "Geography"), by.y = c("Year", "Geo"), all.x = TRUE)
merged_data[c("CPI", "Inflation_rate")][is.na(merged_data[c("CPI", "Inflation_rate")])] <- apply(merged_data[c("CPI", "Inflation_rate")], 2, median, na.rm = TRUE)
X <- merged_data[, c(mental_health_indicators, "CPI", "Inflation_rate")]
y <- ifelse(merged_data[[target]] > median(merged_data[[target]], na.rm = TRUE), 1, 0)
cv_folds <- trainControl(method = "cv", number = 10, sampling = "up", search = "grid")
tune_grid <- expand.grid(sigma = 10^seq(-3, 1, length.out = 5), C = 10^seq(-2, 2, length.out = 5))
svm_model <- train(as.factor(y) ~ ., data = data.frame(scale(X), y = as.factor(y)),
method = "svmRadial", trControl = cv_folds, tuneGrid = tune_grid)
cat("Optimized Cross-Validation Accuracy (SVM):", mean(svm_model$results$Accuracy))
