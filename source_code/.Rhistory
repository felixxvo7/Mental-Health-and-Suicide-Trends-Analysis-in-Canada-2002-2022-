summary(model_commit_suicide)
summary(model_suicidal_thoughts_life)
summary(model_suicidal_thoughts_12m)
# Visualization: Suicide vs Economic Indicators
library(ggplot2)
ggplot(merged_data, aes(x = CPI, y = `Commit Suicide`)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", col = "red", se = TRUE) +
labs(title = "Commit Suicide vs CPI in Canada",
x = "Consumer Price Index (CPI)",
y = "Number of Suicides") +
theme_minimal()
ggplot(merged_data, aes(x = Inflation_rate, y = `Commit Suicide`)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", col = "red", se = TRUE) +
labs(title = "Commit Suicide vs Inflation Rate in Canada",
x = "Inflation Rate (%)",
y = "Number of Suicides") +
theme_minimal()
# Filter data for Canada
economic_canada <- economic_data %>%
filter(Geo == "Canada") %>%
select(Year, CPI, Inflation_rate)
suicide_indicators <- c( "Suicidal thoughts, life", "Suicidal thoughts, 12 months")
suicide_canada <- df_canada %>%
filter(Geography == "Canada", Gender == "Total, gender of person", Indicators %in% suicide_indicators) %>%
select(Year, Indicators, Population) %>%
group_by(Year, Indicators) %>%
summarise(Population = sum(Population, na.rm = TRUE), .groups = "drop")
suicide_pivot <- suicide_canada %>%
pivot_wider(names_from = Indicators, values_from = Population)
# Merge suicide and economic data
merged_data <- merge(suicide_pivot, economic_canada, by = "Year", all.x = TRUE)
head(merged_data)
# Correlation Analysis
cor_results <- data.frame(
Suicide_Indicator = character(),
Economic_Indicator = character(),
Correlation = numeric(),
p_value = numeric(),
stringsAsFactors = FALSE
)
economic_indicators <- c("CPI", "Inflation_rate")
for (suicide in suicide_indicators) {
for (economic in economic_indicators) {
if (suicide %in% colnames(merged_data) && economic %in% colnames(merged_data)) {
cor_test <- cor.test(merged_data[[suicide]], merged_data[[economic]])
cor_results <- rbind(cor_results, data.frame(
Suicide_Indicator = suicide,
Economic_Indicator = economic,
Correlation = round(cor_test$estimate, 3),
p_value = round(cor_test$p.value, 4)
))
print(paste("Correlation between", suicide, "and", economic, ":"))
print(cor_test)
cat("\n")
}
}
}
# Display correlation results
kable(cor_results, caption = "Correlation Between Economic Indicators and Suicide Rates")
# Regression Analysis
model_commit_suicide <- lm(`Commit Suicide` ~ CPI + Inflation_rate, data = merged_data)
# Correlation Analysis
cor_results <- data.frame(
Suicide_Indicator = character(),
Economic_Indicator = character(),
Correlation = numeric(),
p_value = numeric(),
stringsAsFactors = FALSE
)
economic_indicators <- c("CPI", "Inflation_rate")
for (suicide in suicide_indicators) {
for (economic in economic_indicators) {
if (suicide %in% colnames(merged_data) && economic %in% colnames(merged_data)) {
cor_test <- cor.test(merged_data[[suicide]], merged_data[[economic]])
cor_results <- rbind(cor_results, data.frame(
Suicide_Indicator = suicide,
Economic_Indicator = economic,
Correlation = round(cor_test$estimate, 3),
p_value = round(cor_test$p.value, 4)
))
print(paste("Correlation between", suicide, "and", economic, ":"))
print(cor_test)
cat("\n")
}
}
}
# Display correlation results
kable(cor_results, caption = "Correlation Between Economic Indicators and Suicide Rates")
# Regression Analysis)
model_suicidal_thoughts_life <- lm(`Suicidal thoughts, life` ~ CPI + Inflation_rate, data = merged_data)
model_suicidal_thoughts_12m <- lm(`Suicidal thoughts, 12 months` ~ CPI + Inflation_rate, data = merged_data)
# Regression Results
summary(model_suicidal_thoughts_life)
summary(model_suicidal_thoughts_12m)
# Visualization: Suicide vs Economic Indicators
library(ggplot2)
ggplot(merged_data, aes(x = CPI, y = `Commit Suicide`)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", col = "red", se = TRUE) +
labs(title = "Commit Suicide vs CPI in Canada",
x = "Consumer Price Index (CPI)",
y = "Number of Suicides") +
theme_minimal()
# Correlation Analysis
cor_results <- data.frame(
Suicide_Indicator = character(),
Economic_Indicator = character(),
Correlation = numeric(),
p_value = numeric(),
stringsAsFactors = FALSE
)
economic_indicators <- c("CPI", "Inflation_rate")
for (suicide in suicide_indicators) {
for (economic in economic_indicators) {
if (suicide %in% colnames(merged_data) && economic %in% colnames(merged_data)) {
cor_test <- cor.test(merged_data[[suicide]], merged_data[[economic]])
cor_results <- rbind(cor_results, data.frame(
Suicide_Indicator = suicide,
Economic_Indicator = economic,
Correlation = round(cor_test$estimate, 3),
p_value = round(cor_test$p.value, 4)
))
print(paste("Correlation between", suicide, "and", economic, ":"))
print(cor_test)
cat("\n")
}
}
}
# Display correlation results
kable(cor_results, caption = "Correlation Between Economic Indicators and Suicide Rates")
# Regression Analysis)
model_suicidal_thoughts_life <- lm(`Suicidal thoughts, life` ~ CPI + Inflation_rate, data = merged_data)
model_suicidal_thoughts_12m <- lm(`Suicidal thoughts, 12 months` ~ CPI + Inflation_rate, data = merged_data)
# Regression Results
summary(model_suicidal_thoughts_life)
summary(model_suicidal_thoughts_12m)
economic_data  <-read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
# Filter data for Canada
economic_canada <- economic_data %>%
filter(Geo == "Canada") %>%
select(Year, CPI, Inflation_rate)
suicide_indicators <- c("Commit Suicide", "Suicidal thoughts, life", "Suicidal thoughts, 12 months")
suicide_canada <- df_canada %>%
filter(Geography == "Canada", Gender == "Total, gender of person", Indicators %in% suicide_indicators) %>%
select(Year, Indicators, Population) %>%
group_by(Year, Indicators) %>%
summarise(Population = sum(Population, na.rm = TRUE), .groups = "drop")
suicide_pivot <- suicide_canada %>%
pivot_wider(names_from = Indicators, values_from = Population)
# Merge suicide and economic data
merged_data <- merge(suicide_pivot, economic_canada, by = "Year", all.x = TRUE)
head(merged_data)
# Correlation Analysis
cor_results <- data.frame(
Suicide_Indicator = character(),
Economic_Indicator = character(),
Correlation = numeric(),
p_value = numeric(),
stringsAsFactors = FALSE
)
economic_indicators <- c("CPI", "Inflation_rate")
for (suicide in suicide_indicators) {
for (economic in economic_indicators) {
if (suicide %in% colnames(merged_data) && economic %in% colnames(merged_data)) {
cor_test <- cor.test(merged_data[[suicide]], merged_data[[economic]])
cor_results <- rbind(cor_results, data.frame(
Suicide_Indicator = suicide,
Economic_Indicator = economic,
Correlation = round(cor_test$estimate, 3),
p_value = round(cor_test$p.value, 4)
))
print(paste("Correlation between", suicide, "and", economic, ":"))
print(cor_test)
cat("\n")
}
}
}
# Display correlation results
kable(cor_results, caption = "Correlation Between Economic Indicators and Suicide Rates")
# Regression Analysis
model_commit_suicide <- lm(`Commit Suicide` ~ CPI + Inflation_rate, data = merged_data)
model_suicidal_thoughts_life <- lm(`Suicidal thoughts, life` ~ CPI + Inflation_rate, data = merged_data)
model_suicidal_thoughts_12m <- lm(`Suicidal thoughts, 12 months` ~ CPI + Inflation_rate, data = merged_data)
# Regression Results
summary(model_commit_suicide)
summary(model_suicidal_thoughts_life)
summary(model_suicidal_thoughts_12m)
# Visualization: Suicide vs Economic Indicators
library(ggplot2)
ggplot(merged_data, aes(x = CPI, y = `Commit Suicide`)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", col = "red", se = TRUE) +
labs(title = "Commit Suicide vs CPI in Canada",
x = "Consumer Price Index (CPI)",
y = "Number of Suicides") +
theme_minimal()
ggplot(merged_data, aes(x = Inflation_rate, y = `Commit Suicide`)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", col = "red", se = TRUE) +
labs(title = "Commit Suicide vs Inflation Rate in Canada",
x = "Inflation Rate (%)",
y = "Number of Suicides") +
theme_minimal()
# Correlation Analysis
cor_results <- data.frame(
Suicide_Indicator = character(),
Economic_Indicator = character(),
Correlation = numeric(),
p_value = numeric(),
stringsAsFactors = FALSE
)
economic_indicators <- c("CPI", "Inflation_rate")
for (suicide in suicide_indicators) {
for (economic in economic_indicators) {
if (suicide %in% colnames(merged_data) && economic %in% colnames(merged_data)) {
cor_test <- cor.test(merged_data[[suicide]], merged_data[[economic]])
cor_results <- rbind(cor_results, data.frame(
Suicide_Indicator = suicide,
Economic_Indicator = economic,
Correlation = round(cor_test$estimate, 3),
p_value = round(cor_test$p.value, 4)
))
print(paste("Correlation between", suicide, "and", economic, ":"))
print(cor_test)
cat("\n")
}
}
}
kable(cor_results, caption = "Correlation Between Economic Indicators and Suicide Rates")
# Regression Analysis
model_commit_suicide <- lm(`Commit Suicide` ~ CPI + Inflation_rate, data = merged_data)
model_suicidal_thoughts_life <- lm(`Suicidal thoughts, life` ~ CPI + Inflation_rate, data = merged_data)
model_suicidal_thoughts_12m <- lm(`Suicidal thoughts, 12 months` ~ CPI + Inflation_rate, data = merged_data)
summary(model_commit_suicide)
summary(model_suicidal_thoughts_life)
summary(model_suicidal_thoughts_12m)
library(ggplot2)
ggplot(merged_data, aes(x = CPI, y = `Commit Suicide`)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", col = "red", se = TRUE) +
labs(title = "Commit Suicide vs CPI in Canada",
x = "Consumer Price Index (CPI)",
y = "Number of Suicides") +
theme_minimal()
ggplot(merged_data, aes(x = Inflation_rate, y = `Commit Suicide`)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", col = "red", se = TRUE) +
labs(title = "Commit Suicide vs Inflation Rate in Canada",
x = "Inflation Rate (%)",
y = "Number of Suicides") +
theme_minimal()
economic_canada <- economic_data %>%
filter(Geo == "Canada") %>%
select(Year, CPI, Inflation_rate)
suicide_indicators <- c("Suicidal thoughts, life", "Suicidal thoughts, 12 months")
suicide_canada <- suicide_data %>%
filter(Geography == "Canada", Gender == "Total, gender of person", Indicators %in% suicide_indicators) %>%
select(Year, Indicators, Population) %>%
group_by(Year, Indicators) %>%
summarise(Population = sum(Population, na.rm = TRUE), .groups = "drop")
economic_canada <- economic_data %>%
filter(Geo == "Canada") %>%
select(Year, CPI, Inflation_rate)
suicide_indicators <- c("Suicidal thoughts, life", "Suicidal thoughts, 12 months")
suicide_canada <- df_canada %>%
filter(Geography == "Canada", Gender == "Total, gender of person", Indicators %in% suicide_indicators) %>%
select(Year, Indicators, Population) %>%
group_by(Year, Indicators) %>%
summarise(Population = sum(Population, na.rm = TRUE), .groups = "drop")
# Convert suicide data to wide format
suicide_pivot <- suicide_canada %>%
pivot_wider(names_from = Indicators, values_from = Population)
# Merge suicide and economic data
merged_data <- merge(suicide_pivot, economic_canada, by = "Year", all.x = TRUE)
# Display merged data
kable(merged_data, caption = "Merged Economic and Suicide Data in Canada")
# Correlation Analysis
cor_results <- data.frame(
Suicide_Indicator = character(),
Economic_Indicator = character(),
Correlation = numeric(),
p_value = numeric(),
stringsAsFactors = FALSE
)
economic_indicators <- c("CPI", "Inflation_rate")
for (suicide in suicide_indicators) {
for (economic in economic_indicators) {
if (suicide %in% colnames(merged_data) && economic %in% colnames(merged_data)) {
cor_test <- cor.test(merged_data[[suicide]], merged_data[[economic]])
cor_results <- rbind(cor_results, data.frame(
Suicide_Indicator = suicide,
Economic_Indicator = economic,
Correlation = round(cor_test$estimate, 3),
p_value = round(cor_test$p.value, 4)
))
print(paste("Correlation between", suicide, "and", economic, ":"))
print(cor_test)
cat("\n")
}
}
}
# Display correlation results
kable(cor_results, caption = "Correlation Between Economic Indicators and Suicidal Thoughts")
library(ggplot2)
# Scatter Plot with Facet Grid (All in One Graph)
ggplot(plot_data, aes(x = Economic_Value, y = Population, color = Suicidal_Thoughts_Type)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = TRUE) +
facet_grid(Suicidal_Thoughts_Type ~ Economic_Indicator, scales = "free") +
labs(title = "Suicidal Thoughts vs Economic Indicators in Canada",
x = "Economic Indicator Value",
y = "Suicidal Thoughts (Population)") +
theme_minimal()
library(ggplot2)
plot_data <- merged_data %>%
pivot_longer(cols = c("CPI", "Inflation_rate"),
names_to = "Economic_Indicator", values_to = "Economic_Value")
ggplot(plot_data, aes(x = Economic_Value, y = Population, color = Suicidal_Thoughts_Type)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = TRUE) +
facet_grid(Suicidal_Thoughts_Type ~ Economic_Indicator, scales = "free") +
labs(title = "Suicidal Thoughts vs Economic Indicators in Canada",
x = "Economic Indicator Value",
y = "Suicidal Thoughts (Population)") +
theme_minimal()
library(ggplot2)
# Convert suicide data to long format
suicide_long <- df_canada %>%
pivot_wider(names_from = Indicators, values_from = Population) %>%
pivot_longer(cols = c("Suicidal thoughts, life", "Suicidal thoughts, 12 months"),
names_to = "Suicidal_Thoughts_Type", values_to = "Population")
# Merge suicide and economic data
merged_data <- merge(suicide_long, economic_canada, by = "Year", all.x = TRUE)
plot_data <- merged_data %>%
pivot_longer(cols = c("CPI", "Inflation_rate"),
names_to = "Economic_Indicator", values_to = "Economic_Value")
ggplot(plot_data, aes(x = Economic_Value, y = Population, color = Suicidal_Thoughts_Type)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = TRUE) +
facet_grid(Suicidal_Thoughts_Type ~ Economic_Indicator, scales = "free") +
labs(title = "Suicidal Thoughts vs Economic Indicators in Canada",
x = "Economic Indicator Value",
y = "Suicidal Thoughts (Population)") +
theme_minimal()
library(ggplot2)
# Convert suicide data to long format
suicide_long <- df_canada %>%
pivot_wider(names_from = Indicators, values_from = Population) %>%
pivot_longer(cols = c("Suicidal thoughts, life", "Suicidal thoughts, 12 months"),
names_to = "Suicidal_Thoughts_Type", values_to = "Population")
# Merge suicide and economic data
merged_data <- merge(suicide_long, economic_canada, by = "Year", all.x = TRUE)
plot_data <- merged_data %>%
pivot_longer(cols = c("CPI", "Inflation_rate"),
names_to = "Economic_Indicator", values_to = "Economic_Value")
ggplot(plot_data, aes(x = Economic_Value, y = Population, color = Suicidal_Thoughts_Type)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = TRUE) +
facet_grid(Suicidal_Thoughts_Type ~ Economic_Indicator, scales = "free") +
labs(title = "Suicidal Thoughts vs Economic Indicators in Canada",
x = "Economic Indicator Value",
y = "Suicidal Thoughts (Population)") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
#Import libraries:
library(tidyverse)
library(knitr)
mental_health_data <- read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/merged_suicide_mental_health_data.csv")
df_canada <- mental_health_data %>%
filter(Geography == "Canada", Gender == "Total, gender of person")
suicide_indicator <- "Commit Suicide"
mental_health_indicators <- c("Major depressive episode, life",
"Eating disorder, current diagnosed condition",
"Suicidal thoughts, life",
"Suicidal thoughts, 12 months",
"Social phobia, life",
"Generalized anxiety disorder, life",
"Bipolar disorder, life")
df_filtered <- df_canada %>%
filter(Indicators %in% c(suicide_indicator, mental_health_indicators)) %>%
select(Year, Indicators, Population) %>%
group_by(Year, Indicators) %>%
summarise(Population = sum(Population, na.rm = TRUE), .groups = "drop")
df_pivot <- df_filtered %>%
pivot_wider(names_from = Indicators, values_from = Population)
print(df_pivot)
# Handle missing values (replace NA with median)
df_pivot_filled <- df_pivot %>%
mutate(across(where(is.numeric), ~ ifelse(is.na(.), median(., na.rm = TRUE), .)))
# Correlation analysis
cor_results <- data.frame(
Indicator = character(),
Correlation = numeric(),
t_value = numeric(),
p_value = numeric(),
stringsAsFactors = FALSE
)
for (indicator in mental_health_indicators) {
if (indicator %in% colnames(df_pivot_filled)) {
cor_test <- cor.test(df_pivot_filled[[indicator]], df_pivot_filled[["Commit Suicide"]])
cor_results <- rbind(cor_results, data.frame(
Indicator = indicator,
Correlation = round(cor_test$estimate, 3),
t_value = round(cor_test$statistic, 3),
p_value = round(cor_test$p.value, 4)
))
} else {
cor_results <- rbind(cor_results, data.frame(
Indicator = indicator,
Correlation = NA,
t_value = NA,
p_value = NA
))
}
}
# Display results in a table
kable(cor_results, caption = "Pearson Correlation Between Mental Health Indicators and Suicide Rates")
suicide_indicators <- c("Suicidal thoughts, life", "Suicidal thoughts, 12 months")
mental_health_indicators <- c("Major depressive episode, life",
"Eating disorder, current diagnosed condition",
"Social phobia, life",
"Generalized anxiety disorder, life",
"Bipolar disorder, life")
df_filtered <- df_canada %>%
filter(Indicators %in% c(suicide_indicators, mental_health_indicators)) %>%
select(Year, Indicators, Population) %>%
group_by(Year, Indicators) %>%
summarise(Population = sum(Population, na.rm = TRUE), .groups = "drop")
df_pivot <- df_filtered %>%
pivot_wider(names_from = Indicators, values_from = Population)
df_pivot_filled <- df_pivot %>%
mutate(across(where(is.numeric), ~ ifelse(is.na(.), median(., na.rm = TRUE), .)))
cor_results <- data.frame(
Indicator = character(),
Suicide_Indicator = character(),
Correlation = numeric(),
t_value = numeric(),
p_value = numeric(),
stringsAsFactors = FALSE
)
for (suicide in suicide_indicators) {
for (indicator in mental_health_indicators) {
if (indicator %in% colnames(df_pivot_filled) && suicide %in% colnames(df_pivot_filled)) {
cor_test <- cor.test(df_pivot_filled[[indicator]], df_pivot_filled[[suicide]])
cor_results <- rbind(cor_results, data.frame(
Indicator = indicator,
Suicide_Indicator = suicide,
Correlation = round(cor_test$estimate, 3),
t_value = round(cor_test$statistic, 3),
p_value = round(cor_test$p.value, 4)
))
print(paste("Correlation between", indicator, "and", suicide, ":"))
print(cor_test)
cat("\n")
} else {
cor_results <- rbind(cor_results, data.frame(
Indicator = indicator,
Suicide_Indicator = suicide,
Correlation = NA,
t_value = NA,
p_value = NA
))
}
}
}
kable(cor_results, caption = "Pearson Correlation Between Mental Health Indicators and Suicidal Thoughts")
economic_data  <-read.csv("C:/Users/felix/Desktop/CODING/felix's works/Mental-Health-On-Suicide-Rates-Trend-Analysis-Prediction/datasets/processed/CPI_inflation.csv")
economic_canada <- economic_data %>%
filter(Geo == "Canada") %>%
select(Year, CPI, Inflation_rate)
suicide_indicators <- c("Suicidal thoughts, life", "Suicidal thoughts, 12 months")
suicide_canada <- df_canada %>%
filter(Geography == "Canada", Gender == "Total, gender of person", Indicators %in% suicide_indicators) %>%
select(Year, Indicators, Population) %>%
group_by(Year, Indicators) %>%
summarise(Population = sum(Population, na.rm = TRUE), .groups = "drop")
# Convert suicide data to wide format
suicide_pivot <- suicide_canada %>%
pivot_wider(names_from = Indicators, values_from = Population)
# Merge suicide and economic data
merged_data <- merge(suicide_pivot, economic_canada, by = "Year", all.x = TRUE)
# Display merged data
kable(merged_data, caption = "Merged Economic and Suicide Data in Canada")
# Correlation Analysis
cor_results <- data.frame(
Suicide_Indicator = character(),
Economic_Indicator = character(),
Correlation = numeric(),
p_value = numeric(),
stringsAsFactors = FALSE
)
economic_indicators <- c("CPI", "Inflation_rate")
for (suicide in suicide_indicators) {
for (economic in economic_indicators) {
if (suicide %in% colnames(merged_data) && economic %in% colnames(merged_data)) {
cor_test <- cor.test(merged_data[[suicide]], merged_data[[economic]])
cor_results <- rbind(cor_results, data.frame(
Suicide_Indicator = suicide,
Economic_Indicator = economic,
Correlation = round(cor_test$estimate, 3),
p_value = round(cor_test$p.value, 4)
))
print(paste("Correlation between", suicide, "and", economic, ":"))
print(cor_test)
cat("\n")
}
}
}
# Display correlation results
kable(cor_results, caption = "Correlation Between Economic Indicators and Suicidal Thoughts")
